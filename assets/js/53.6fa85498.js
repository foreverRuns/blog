(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{736:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("记录 Git GitHub 日常操作出错及相关解决办法")])]),t._v(" "),s("h2",{attrs:{id:"gitignore-文件不生效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore-文件不生效"}},[t._v("#")]),t._v(" .gitignore 文件不生效")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("在 git 中如果想忽略掉某个文件，不让这个文件提交到版本库中，在工程根目录下 "),s("code",[t._v(".gitignore")]),t._v("（如果没有这个文件，手动新建）文件中添加匹配规则")])]),t._v(" "),s("blockquote",[s("p",[t._v("问题：把某些目录或文件加入忽略规则后发现并未生效")])]),t._v(" "),s("p",[s("code",[t._v(".gitignore")]),t._v(" 只能忽略那些原来没有被追踪(track)的文件，如果该文件已经被纳入了版本管理中，则修改 "),s("code",[t._v(".gitignore")]),t._v(" 是无效的。")]),t._v(" "),s("blockquote",[s("p",[t._v("解决方法: 先从暂存区移除该文件, 即 "),s("code",[t._v("改变成未被追踪状态")]),t._v(" 然后再提交")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" dirname/filename\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update .gitignore'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"refusing-to-merge-unrelated-histories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refusing-to-merge-unrelated-histories"}},[t._v("#")]),t._v(" refusing to merge unrelated histories")]),t._v(" "),s("blockquote",[s("p",[t._v("问题：从远程仓库 pull 项目到本地的时候提示错误 fatal: refusing to merge unrelated histories")])]),t._v(" "),s("p",[t._v("出现该错误的原因有几点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有一个包含一些提交的新 Git 仓库，当你尝试从现有的远程仓库中 pull。合并变得不兼容，因为分支和远程拉取的历史不同。当你试图合并两个完全不相关的分支时，Git 看到了这种情况，它不知道该怎么做。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".git")]),t._v(" 目录有问题，它可能在某些时候被意外删除或损坏。如果您克隆或清理了项目，则可能会发生这种情况。此处发生错误是因为 Git 没有有关本地项目历史的必要信息。")])]),t._v(" "),s("li",[s("p",[t._v("当您尝试从远程仓库推送或拉取数据时，分支位于不同的 "),s("code",[t._v("HEAD")]),t._v(" 位置，并且由于缺乏共性而无法匹配。")])])]),t._v(" "),s("p",[t._v("我出现的问题是，创建的新远程仓库包含了 README 和 LICENSE，远程的代码没有先 clone 到本地，而是直接在本地项目中 git init, 所以不兼容。")]),t._v(" "),s("blockquote",[s("p",[t._v("解决办法: 根据提示的 "),s("code",[t._v("unrelated histories")]),t._v(" 使用 "),s("code",[t._v("-–allow-unrelated-histories")]),t._v(" 参数，让 git 允许提交不关联的历史代码")])]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin main -–allow-unrelated-histories\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main --allow-unrelated-histories\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);